version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:6.0
    container_name: social_recommendation_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: social_recommendation
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - social_network

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15
    container_name: social_recommendation_neo4j
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/password123
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_memory_pagecache_size: 512m
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - social_network

  # Redis Cache
  redis:
    image: redis:7.0-alpine
    container_name: social_recommendation_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - social_network

  # Data Collection Service
  data_collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: social_recommendation_collector
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - mongodb
      - neo4j
      - redis
    networks:
      - social_network
    command: >
      python data_collection/main_collector.py
      --continuous
      --interval 60
      --max-profiles 50
      --max-posts 25

  # Jupyter Notebook for Analysis
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: social_recommendation_jupyter
    restart: unless-stopped
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=your_jupyter_token_here
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/app/notebooks
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - neo4j
      - redis
    networks:
      - social_network
    command: >
      jupyter lab
      --ip=0.0.0.0
      --port=8888
      --no-browser
      --allow-root
      --NotebookApp.token='your_jupyter_token_here'

  # Grafana for Monitoring
  grafana:
    image: grafana/grafana:10.0
    container_name: social_recommendation_grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - social_network

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: social_recommendation_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - social_network

  # MongoDB Express (Web UI)
  mongo-express:
    image: mongo-express:latest
    container_name: social_recommendation_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - social_network

volumes:
  mongodb_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  social_network:
    driver: bridge
